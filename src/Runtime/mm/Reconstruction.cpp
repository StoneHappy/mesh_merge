#include "Reconstruction.h"
#include <CGAL/Advancing_front_surface_reconstruction.h>
namespace mm
{
	int Reconstruction(const Point_set& points, Surface_mesh& outmesh)
	{
		std::cout << "Begin Advancing front reconstructing" << std::endl;
		typedef std::array<std::size_t, 3> Facet; // Èý½ÇÃæË÷Òý
		std::vector<Facet> facets;
		CGAL::advancing_front_surface_reconstruction(points.points().begin(), points.points().end(), std::back_inserter(facets));
		std::cout << facets.size()
			<< " facet(s) generated by reconstruction." << std::endl;

		std::vector<Point_3> vertices;
		vertices.reserve(points.size());
		std::copy(points.points().begin(), points.points().end(), std::back_inserter(vertices));

		std::reverse(facets.begin(), facets.end());

		CGAL::Polygon_mesh_processing::polygon_soup_to_polygon_mesh(vertices, facets, outmesh);
		
		std::cout << "End Advancing front reconstructing" << std::endl;
		return 0;
	}
}
